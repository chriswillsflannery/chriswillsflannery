import { useEffect } from 'react';
import type { NextPage } from 'next'
import { useRouter } from 'next/router';
import Head from 'next/head'
import Link from 'next/link';
import Prism from 'prismjs';
import "prismjs/components/prism-typescript";
import "prismjs/components/prism-jsx";
import "prismjs/components/prism-tsx";

import { CodeBlock, HL } from '@/components';
import styles from '@/styles/Home.module.css';
import useWindowSize from '@/hooks/useWindowSize';
import { en } from '@/util/en';
import { es } from '@/util/es';
import dunderProto from '@/public/oop/dunderproto.jpg';

const parentChild = `
// create a parent object
const myPerson = {
  arms: 2,
  legs: 2,
};

// create a child object that links to parent object
const chris = Object.create(myPerson);
`;

const chrisHands = `
// create a parent object
const myPerson = {
  arms: 2,
  legs: 2,
};

// create a child object that links to parent object
const chris = Object.create(myPerson);
console.log(chris.hands);
// undefined
`;

const chrisHasOwnProperty = `
// create a parent object
const myPerson = {
  arms: 2,
  legs: 2,
};

// create a child object that links to parent object
const chris = Object.create(myPerson);
console.log(chris.hasOwnProperty('arms'));
// false
`;

const forLoop = `
for (let key in chris) {
  console.log(key);
}
// arms
// legs
`;

const forLoopCombine = `
for (let key in chris) {
  console.log(key, chris.hasOwnProperty(key));
}
// arms false
// legs false
`;

const propWithConsoleLog = `
const chris = Object.create(myPerson);
chris.hands = 2;
console.log(chris);
// { hands: 2 }
`;

const propWithDelete = `
const chris = Object.create(myPerson);
chris.hands = 2;
console.log(chris);
// { hands: 2 }
delete chris.hands;
console.log(chris);
// {}
`;

const attemptDeleteOnPrototype = `
const chris = Object.create(myPerson);
chris.hands = 2;
console.log(chris);
// { hands: 2 }
delete chris.hands;
console.log(chris);
// {}
delete chris.arms;
console.log(chris.arms);
// 2
`;

const IntroToGenerics: NextPage = () => {
  const size = useWindowSize();
  const { locale } = useRouter(); 
  const myLang: any = locale === 'en-US' ? en : es;

  useEffect(() => {
    const highlight = async () => {
      await Prism.highlightAll();
    }
    highlight();
  }, [size]);

  return (
    <div className={styles.container}>
      <Head>
        <title>ChrisWF.</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.articleMain}>
        {myLang.oop3.title}
        <article style={{ maxWidth: '600px', lineHeight: '24px'}}>
          {myLang.oop3.sub1}
          {myLang.oop3[1]}
          {myLang.oop3[2]}
          <CodeBlock code={parentChild} />
          {myLang.oop3[3]}
          <CodeBlock code={chrisHands} />
          {myLang.oop3[4]}
          {myLang.oop3[5]}
          {myLang.oop3[6]}
          <CodeBlock code={chrisHasOwnProperty} />
          {myLang.oop3[7]}
          {myLang.oop3[8]}
          <CodeBlock code={forLoop} />
          {myLang.oop3[9]}
          <CodeBlock code={forLoopCombine} />
          {myLang.oop3[10]}
          {myLang.oop3[11]}
          {myLang.oop3[12]}
          <CodeBlock code={propWithConsoleLog} />
          {myLang.oop3[13]}
          <CodeBlock code={propWithDelete} />
          {myLang.oop3[14]}
          <CodeBlock code={attemptDeleteOnPrototype} />
          {myLang.oop3[15]}
          {myLang.oop3[16]}
        </article>
        <HL />
      </main>

      <footer className={styles.footer}>
        <p>
          <Link href="../">
            Home
          </Link>
        </p>
      </footer>
    </div>
  )
}

export default IntroToGenerics
