import { useEffect } from 'react';
import type { NextPage } from 'next'
import { useRouter } from 'next/router';
import Head from 'next/head'
import Link from 'next/link';
import Prism from 'prismjs';
import "prismjs/components/prism-typescript";
import "prismjs/components/prism-jsx";
import "prismjs/components/prism-tsx";

import { CodeBlock, HL } from '@/components';
import styles from '@/styles/Home.module.css';
import useWindowSize from '@/hooks/useWindowSize';
import { en } from '@/util/en';
import { es } from '@/util/es';

const gptRes1 = `
If a user creates a derivative work based on
another artist's work without permission,
the original artist may have the legal right
to claim royalties for the use of their work.
This is because the copyright holder of the
original work has the exclusive right to create
derivative works based on their work. If someone
else creates a derivative work without permission,
they may be infringing on the copyright holder's
exclusive rights. In order to use another artist's
work as the basis for a new work, it is generally
necessary to obtain permission from the copyright
holder and possibly pay royalties.
`;

const gptRes2 = `
If you are referring to an image that is created
using software or a program developed by MidJourney
and the image is based on or incorporates another
artist's work, then it is possible that the
original artist may have the legal right to claim
royalties for the use of their work. This would
depend on whether the use of the original work is
protected by copyright and whether the user has
obtained permission to use the work or has a valid
defense to copyright infringement.
`;

const gptRes3 = `
Stringers are able to tag their information with
a digital signature, which allows the Library to
identify the source of the information and ensure
that they are properly compensated for their work.
Stringers can also set their own prices for the
information they provide, and the Library will
automatically pay them when a user accesses their
information. The Library uses a system of smart
contracts to facilitate these transactions and
ensure that stringers are paid fairly for their
contributions.
`;

const gptRes4 = `
It is not clear how the use of machine learning
would specifically impact the world of Snow Crash
as depicted in the novel. However, the use of
machine learning could potentially enhance the
abilities of the CIC (Central Intelligence
Corporation) Library by allowing it to process
and analyze large amounts of data more quickly
and accurately. For example, the Library could
use machine learning algorithms to identify
patterns and trends in the data that might not
be easily discernible by humans, or to automate
the classification and organization of information.
The use of machine learning could also potentially
allow the Library to provide more personalized
recommendations or search results to users based
on their individual interests and preferences.
However, it is important to note that the use of
machine learning also raises certain ethical and
social issues that would need to be carefully
considered and addressed.
`;

const SnowCrash: NextPage = () => {
  const size = useWindowSize();
  const { locale } = useRouter(); 
  const myLang: any = locale === 'en-US' ? en : es;

  useEffect(() => {
    const highlight = async () => {
      await Prism.highlightAll();
    }
    highlight();
  }, [size]);

  return (
    <div className={styles.container}>
      <Head>
        <title>ChrisWF.</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.articleMain}>
        {myLang.snowCrash.title}
        <article style={{ maxWidth: '600px', lineHeight: '24px'}}>
          {myLang.snowCrash.sub1}
          {myLang.snowCrash[1]}
          {myLang.snowCrash[2]}
          {myLang.snowCrash[3]}
          {myLang.snowCrash[4]}
          {myLang.snowCrash[5]}
          {myLang.snowCrash[6]}
          {myLang.snowCrash[7]}
          {myLang.snowCrash[8]}
          {myLang.snowCrash[9]}
          {myLang.snowCrash[10]}
          {myLang.snowCrash[11]}
          <CodeBlock code={gptRes1} />
          {myLang.snowCrash[12]}
          <CodeBlock code={gptRes2} />
          {myLang.snowCrash[13]}
          <CodeBlock code={gptRes3} />
          {myLang.snowCrash[14]}
          <CodeBlock code={gptRes4} />
        </article>
        <HL />
      </main>

      <footer className={styles.footer}>
        <p>
          <Link href="../">
            Home
          </Link>
        </p>
      </footer>
    </div>
  )
}

export default SnowCrash
