import type { NextPage } from 'next'
import Head from 'next/head'
import Link from 'next/link';
import { useEffect } from 'react';
import Prism from 'prismjs';
import "prismjs/components/prism-typescript";
import "prismjs/components/prism-jsx";
import "prismjs/components/prism-tsx";

import styles from '../../../styles/Home.module.css';
import HL from '../../components/HorizontalLine';
import CodeBlock from '../../components/CodeBlock';

const link = { color: 'darkSlateBlue' };

const comoMePorto = `
const comoMePorto = 'bonito';
`;

const strings = `
const corazon = 'transparente';
const estrella = 'yellow';
// estos son del tipo 'string'.
`;

const complexStrings = `
corazon.seHaHechoClic = true; // este tipo es 'boolean'
corazon.color = 'rojo'; // este tipo es 'string'
`;

const primitiveTypes = `
string // 'rojo', 'transparente', etc
boolean // true, false
number // 1, 10, 3842
null // ausencia intencionada de valor
undefined // valor que existe pero que aún no se ha definido
`;

const firstObject = `
const corazon = {
  seHaHechoClic: true,
  color: 'rojo',
};
`;

const objectWithObject = `
const corazon = {
  seHaHechoClic: true,
  estilos: {
    color: 'rojo',
    tamano: 'grande'
  }
};
`;

const JavaScriptQueEs: NextPage = () => {
  useEffect(() => {
    const highlight = async () => {
      await Prism.highlightAll();
    }
    highlight();
  }, []);
  
  return (
    <div className={styles.container}>
      <Head>
        <title>ChrisWF.</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.articleMain}>
        <h1>{`JavaScript: Variables y tipos primitivos`}</h1>
        <HL />

        <article style={{ maxWidth: '600px', lineHeight: '24px'}}>
          <h4>En JavaScript, ¿qué es una variable?</h4>
          <p>Las variables son elementos que nos permiten almanecer datos - datos con los que luego podemos usar y manipular. Las variables nos permiten almanecer y referenciar información en la memoria de nuestros dispositívos.</p>
          <CodeBlock code={comoMePorto} />
          <p>Digamos que queremos crear una app como TikTok. Cuando alguien sube un nuevo video, queremos que la gente pueda <i>like</i> su video por hacer <i>clic</i> en el icono del corazón. Cuando hace <i>clic</i>, el corazón deberia volverse rojo.</p>
          <p>La variable en este caso sería <b>corazón.</b> Corazón podría tener una multitúd de diferentes <i>estados</i> or <i>states.</i> Corazón podría ser `rojo` o `transparente` - estes tipos de datos se llaman <i>strings.</i> Los parecen así:</p>
          <CodeBlock code={strings} />
          <p>O, <b>corazón</b> podría ser un tipo de dato más complejo, que a su vez tiene mas <i>states.</i> Esto podría ser como:</p>
          <CodeBlock code={complexStrings} />
        </article>
        <HL />

        <article style={{ maxWidth: '600px', lineHeight: '24px'}}>
          <h4>Hay muchos diferentes <i>tipos</i> o <i>types</i> que las variables puedan ser en JavaScript, algunos son:</h4>
          <CodeBlock code={primitiveTypes} />
          <p>Los de arriba están conocidos como <i>primitivos</i> y son los mas sencillos, y fundamentales bloques de construcción de la lenguaje.</p>
          <p>También hay tipos de datos más complejos conocidos como <i>objetos</i> o <i>objects.</i> El ejemplo de arriba donde <b>corazón</b> tiene muchos diferentes <i>states</i> (seHaHechoClic, color) es un objeto, se ve así:</p>
          <CodeBlock code={firstObject} />
          <p>Podrías pensar en un objeto como un contenedor por más variables. Cualquiera de las variables descritas en el objeto se llaman <i>propiedades</i> o <i>properties.</i> Estas propiedades en el objeto podrían ser cualquiera de los <i>types</i> mencionados anteriormente... incluso objetos!</p>
          <CodeBlock code={objectWithObject} />
          <p>* Te habrás dado cuenta de que normalmente no utilizamos el acento o la tilde al escribir nuestro código, incluso cuando utilizamos nombres en español. Este consejo viene de mis amigos de <a style={link} href="https://mytypeof.dev/">my typeof Radio</a>.</p>
        </article>
        <HL />
      </main>

      <footer className={styles.footer}>
        <p>
          <Link href="../../">
            Home
          </Link>
        </p>
      </footer>
    </div>
  )
}

export default JavaScriptQueEs
